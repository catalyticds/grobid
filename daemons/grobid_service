#!/bin/sh

### BEGIN INIT INFO
# Provides:          grobid_service
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: grobid PDF processing service.
# Description:       grobid PDF processing service (that processes PDFs).
### END INIT INFO

# Change the next 3 lines to suit where you install your script and what you want to call it
export GROBID_BASE_DIR=/home/ubuntu/grobid
export GROBID_VERSION="0.5.1"
export DAEMON=$GROBID_BASE_DIR/$GROBID_VERSION/gradlew
export GROBID_LOG_DIR=/var/log/grobid
export GROBID_LOG_LEVEL=ERROR

DAEMON_NAME=grobid_service

# Add any command line options for your daemon here
# N.B.: the '--query' argument just indicates that this is a port listening daemon ("push" model).
# Remove when queue pulling mechanism is instated.
DAEMON_OPTS="run"

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=nobody

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid

. /lib/lsb/init-functions

do_start () {
    sleep 2
    log_daemon_msg "Starting system $DAEMON_NAME daemon"
    # Set up first, if not already.
    if [[ ! -d $GROBID_BASE_DIR ]]
    then
        mkdir -p $GROBID_BASE_DIR
    fi
    cd $GROBID_BASE_DIR
    git clone -n https://github.com/catalyticds/grobid.git --depth 1
    cd grobid
    git checkout HEAD bin/set_up_grobid_service.sh
    # This uses the GROBID env vars from above.
    ./bin/set_up_grobid_service.sh
    start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas $DAEMON -- $DAEMON_OPTS
    log_end_msg $?
}

do_stop () {
    log_daemon_msg "Stopping system $DAEMON_NAME daemon"
    start-stop-daemon --stop --pidfile $PIDFILE --retry 10
    log_end_msg $?
}

case "$1" in

    start|stop)
        do_${1}
        ;;

    restart|reload|force-reload)
        do_stop
        do_start
        ;;

    status)
        status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
        ;;

    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;

esac
exit 0
